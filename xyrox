local Players           = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService   = game:GetService("TeleportService")
local LocalPlayer       = Players.LocalPlayer

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title       = "Xryox - Grow a Garden",
    Icon        = "dollar-sign",
    Author      = "by xyroxcursedasian",
    Folder      = "XryoxGaG",
    Size        = UDim2.fromOffset(420, 360),
    Transparent = true,
    Theme       = "Dark",
    User        = {Enabled = true, Anonymous = false},
    SideBarWidth = 180,
    HasOutline   = true,
})

local UI = Window

local farmTab     = UI:Tab({Title = "Farm",     Icon = "sprout"})
local utilityTab  = UI:Tab({Title = "Utility",  Icon = "settings"})
local espTab      = UI:Tab({Title = "ESP",      Icon = "eye"})
local fpsTab      = UI:Tab({Title = "FPS",      Icon = "gauge"})
local shopTab     = UI:Tab({Title = "Shop",     Icon = "shopping-cart"})
local settingsTab = UI:Tab({Title = "Settings", Icon = "server"})

local autoClaim       = false
local autoPlant       = false
local autoSell        = false
local autoBuyGear     = false
local espEnabled      = false
local jobId           = ""
local selectedMutations   = {"All"}
local espMutationFilter   = {"Wet"}
local selectedGears       = {"master sprinkler"}
local selectedEggs        = {"Common Egg"}
local selectedTwilight    = {"Star Caller"}
local selectedBloodlit    = {"Mysterious Crate"}

farmTab:Dropdown({
    Title     = "Claim Filter: Mutations",
    Values    = {"All", "Choc", "Chilled", "Frozen", "Wet", "Plasma", "Disco", "Shocked", "Gold", "Rainbow"},
    Value     = {"All"},
    Multi     = true,
    AllowNone = false,
    Callback  = function(vals) selectedMutations = vals end
})

farmTab:Toggle({
    Title = "Auto Claim (Owned Plots Only)",
    Value = false,
    Callback = function(v)
        autoClaim = v
        task.spawn(function()
            while autoClaim do
                for _, plot in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
                    if plot:FindFirstChild("Owner") and plot.Owner.Value == LocalPlayer.Name then
                        local harvest = plot:FindFirstChild("Harvest")
                        if harvest and harvest:FindFirstChild("TouchInterest") then
                            local mut = plot:FindFirstChild("Mutation")
                            if table.find(selectedMutations, "All") or (mut and table.find(selectedMutations, mut.Value)) then
                                ReplicatedStorage.GameEvents.HarvestRemote:FireServer(plot)
                            end
                        end
                    end
                end
                task.wait(0.5)
            end
        end)
    end
})

farmTab:Toggle({
    Title = "Auto Plant (Owned Empty Plots)",
    Value = false,
    Callback = function(v)
        autoPlant = v
        task.spawn(function()
            while autoPlant do
                local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
                local seedName = tool and tool:FindFirstChild("SeedType") and tool.SeedType.Value
                if seedName then
                    for _, plot in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
                        if plot:FindFirstChild("Owner") and plot.Owner.Value == LocalPlayer.Name and not plot:FindFirstChild("Plant") then
                            local remote = ReplicatedStorage:FindFirstChild("PlantSeed")
                            if remote then remote:FireServer(seedName) end
                        end
                    end
                end
                task.wait(1.5)
            end
        end)
    end
})

farmTab:Toggle({
    Title = "Auto Sell",
    Value = false,
    Callback = function(v)
        autoSell = v
        task.spawn(function()
            while autoSell do
                local inv = LocalPlayer:FindFirstChild("Inventory")
                if inv and #inv:GetChildren() >= 30 then
                    local sell = ReplicatedStorage:FindFirstChild("SellItems")
                    if sell then sell:FireServer() end
                end
                task.wait(3)
            end
        end)
    end
})

utilityTab:Button({
    Title = "Go to Owl NPC",
    Callback = function()
        for _, npc in pairs(workspace:GetDescendants()) do
            if npc:IsA("Model") and npc.Name:lower():find("owl") then
                local hrp = npc:FindFirstChild("HumanoidRootPart")
                if hrp then
                    LocalPlayer.Character:MoveTo(hrp.Position)
                    break
                end
            end
        end
    end
})

utilityTab:Button({
    Title = "Hop if Not Bloodmoon",
    Callback = function()
        if game.Lighting.TimeOfDay ~= "00:00:00" then
            TeleportService:Teleport(game.PlaceId)
        end
    end
})

utilityTab:Toggle({
    Title = "Auto Give Moonlit / Bloodlit to Owl",
    Value = false,
    Callback = function(state)
        task.spawn(function()
            while state do
                local remote = ReplicatedStorage:FindFirstChild("GiveToOwl")
                if remote then
                    remote:FireServer("Moonlit")
                    remote:FireServer("Bloodlit")
                end
                task.wait(5)
            end
        end)
    end
})
