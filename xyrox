local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Xryox - Grow a Garden",
    Icon = "dollar-sign",
    Author = "by xyroxcursedasian",
    Folder = "XryoxGaG",
    Size = UDim2.fromOffset(420, 360),
    Transparent = true,
    Theme = "Dark",
    User = {
        Enabled = true,
        Anonymous = false
    },
    SideBarWidth = 180,
    HasOutline = true,
})

local UI = Window

local farmTab = UI:Tab({Title = "Farm", Icon = "sprout"})
local utilityTab = UI:Tab({Title = "Utility", Icon = "settings"})
local petTab = UI:Tab({Title = "Pet", Icon = "paw-print"})
local espTab = UI:Tab({Title = "ESP", Icon = "eye"})
local fpsTab = UI:Tab({Title = "FPS", Icon = "gauge"})
local shopTab = UI:Tab({Title = "Shop", Icon = "shopping-cart"})

local autoClaim = false
local autoPlant = false
local autoSell = false

local function HarvestPlant(Plant)
    local Prompt = Plant:FindFirstChild("ProximityPrompt", true)
    if Prompt then fireproximityprompt(Prompt) end
end

local function CanHarvest(Plant)
    local Prompt = Plant:FindFirstChild("ProximityPrompt", true)
    return Prompt and Prompt.Enabled
end

local function CollectHarvestable()
    local harvestables = {}
    local playerPos = game.Players.LocalPlayer.Character:GetPivot().Position
    local plantsFolder = workspace:FindFirstChild("Farm")
    if not plantsFolder then return {} end
    local plants = plantsFolder:GetDescendants()
    for _, plant in pairs(plants) do
        if plant:IsA("Model") and CanHarvest(plant) then
            local pos = plant:GetPivot().Position
            if (playerPos - pos).Magnitude <= 15 then
                table.insert(harvestables, plant)
            end
        end
    end
    return harvestables
end

local function PlantAtRandom(seed)
    local farms = workspace:FindFirstChild("Farm"):GetChildren()
    local myFarm
    for _, farm in pairs(farms) do
        local data = farm:FindFirstChild("Important") and farm.Important:FindFirstChild("Data")
        if data and data:FindFirstChild("Owner") and data.Owner.Value == game.Players.LocalPlayer.Name then
            myFarm = farm
            break
        end
    end
    if not myFarm then return end
    local locations = myFarm.Important.Plant_Locations:GetChildren()
    if #locations == 0 then return end
    local randomPart = locations[math.random(1, #locations)]
    local pos = randomPart.Position + Vector3.new(math.random(-2,2), 0, math.random(-2,2))
    local plantRemote = game.ReplicatedStorage:FindFirstChild("Plant_RE")
    if plantRemote then
        plantRemote:FireServer(pos, seed)
    end
end

local function SellInventory()
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end
    local previous = character:GetPivot()
    character:PivotTo(CFrame.new(62, 4, -26))
    local sellRemote = game.ReplicatedStorage:FindFirstChild("Sell_Inventory")
    if sellRemote then
        for _ = 1, 5 do
            sellRemote:FireServer()
            task.wait(0.5)
        end
    end
    character:PivotTo(previous)
end

farmTab:Toggle({
    Title = "Auto Claim",
    Value = false,
    Callback = function(v)
        autoClaim = v
        if v then
            task.spawn(function()
                while autoClaim do
                    for _, plant in pairs(CollectHarvestable()) do
                        HarvestPlant(plant)
                    end
                    task.wait(1)
                end
            end)
        end
    end
})

farmTab:Toggle({
    Title = "Auto Plant",
    Value = false,
    Callback = function(v)
        autoPlant = v
        if v then
            task.spawn(function()
                while autoPlant do
                    PlantAtRandom("Tomato")
                    task.wait(2)
                end
            end)
        end
    end
})

farmTab:Toggle({
    Title = "Auto Sell",
    Value = false,
    Callback = function(v)
        autoSell = v
        if v then
            task.spawn(function()
                while autoSell do
                    local inv = game.Players.LocalPlayer:FindFirstChild("Backpack")
                    if inv and #inv:GetChildren() >= 15 then
                        SellInventory()
                    end
                    task.wait(3)
                end
            end)
        end
    end
})

local VirtualUser = game:service("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)

print("[xyroxcursedasian] WindUI (Footagesus) Loaded Successfully")
